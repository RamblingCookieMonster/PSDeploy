{
  "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "administratorLogin": {
      "type": "string",
      "metadata": {
        "description": "The administrator account name to be used across resources."
      }
    },
    "administratorLoginPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The administrator account password to be used across resources."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D1",
      "allowedValues": [
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_D1",
        "Standard_D3",
        "Standard_D4"
      ],
      "metadata": {
      "description": "Select a size for the virtual machine."
      }
    },
    "windowsOSVersion": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter"
      ],
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
      }
    }
  },
  "variables": {
    "apiVersion": "2015-06-15",
    "dnsPrefix": "[string(resourceGroup().name)]",
    "vmName": "[concat(string(resourceGroup().name), '-vm1')]",
    "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'storage1')]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat(string(resourceGroup().name), '-vm-publicip1')]",
    "publicIPAddress": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
    "nicName1": "[concat(string(resourceGroup().name), '-vm-nic1')]",
    "virtualNetworkName": "[concat(string(resourceGroup().name), '-vm-network1')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetName": "[concat(string(resourceGroup().name), '-subnet1')]",
    "subnetID": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "ipconfigName": "[concat(string(resourceGroup().name), '-ipconfiguration1')]",
    "loadBalancerName": "[concat(string(resourceGroup().name), '-loadbalancer1')]",
    "loadBalancerID": "[resourceId('Microsoft.Network/loadBalancers/',variables('loadBalancerName'))]",
    "frontendIPConfigurationsName": "[concat(variables('loadBalancerName'), '-frontendipconfigurations1')]",
    "frontEndIPConfigurationsID": "[concat(variables('loadBalancerID'),'/frontendIPConfigurations/',variables('frontendIPConfigurationsName'))]",
    "backendAddressPoolsName":"[concat(variables('loadBalancerName'), '-backendaddresspools1')]"
  },
  "resources": [
    { "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    { "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "10.0.0.0/16"
            }
          }
        ]
      }
    },
    { "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[concat(variables('dnsPrefix'),'vm')]"
        }
      }
    },
    {  "type": "Microsoft.Network/loadBalancers",
       "name": "[variables('LoadBalancerName')]",
       "location": "[resourceGroup().location]",
       "apiVersion": "[variables('apiVersion')]",
        "dependsOn": [
            "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
        ],
        "properties": {
            "frontendIPConfigurations": [
                {
                    "name": "[variables('frontendIPConfigurationsName')]",
                    "properties": {
                        "publicIPAddress": {
                            "id": "[variables('publicIPAddress')]"
                        }
                    }
                }
            ],
            "backendAddressPools": [
                {
                    "name": "[variables('backendAddressPoolsName')]"
                }
            ],
            "inboundNatRules": [
                {
                    "name": "RDP",
                    "properties": {
                        "frontendIPConfiguration": {
                            "id": "[variables('frontEndIPConfigurationsID')]"
                        },
                    "protocol": "tcp",
                    "frontendPort": 3389,
                    "backendPort": 3389,
                    "enableFloatingIP": false
                    }
                },
                {
                    "name": "WinRM",
                    "properties": {
                        "frontendIPConfiguration": {
                            "id": "[variables('frontEndIPConfigurationsID')]"
                        },
                    "protocol": "tcp",
                    "frontendPort": 5985,
                    "backendPort": 5985,
                    "enableFloatingIP": false
                    }
                }
            ]
        }
    },
    { "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName1')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Network/loadBalancers/', variables('LoadBalancerName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "[variables('ipconfigName')]",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetID')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers',variables('LoadBalancerName')), '/backendAddressPools/', variables('backendAddressPoolsName'))]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers',variables('LoadBalancerName')),'/inboundNatRules/RDP')]"
                },
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers',variables('LoadBalancerName')),'/inboundNatRules/WinRM')]"
                }
              ]
            }
          }
        ]
      }
    },
    { "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",      
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName1'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('administratorLogin')]",
          "adminPassword": "[parameters('administratorLoginPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "[parameters('windowsOSVersion')]",
            "version": "latest"
            },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net/','vhds','/','OSDisk','.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName1'))]"
            }            
          ],
          "networkInterfaceConfigurations": [
            {
              "name": "[variables('nicName1')]",
              "properties": {
                "primary": "true",
                "ipConfigurations": [
                    {
                    "name": "[variables('ipConfigName')]",
                    "properties": {
                        "subnet": {
                            "id": "[variables('subnetID')]"
                            },
                        "loadBalancerBackendAddressPools": {
                            "id": "[concat(variables('loadBalancerID'), '/backendAddressPools/LoadBalancerBackend')]"
                            },
                        "loadBalancerInboundNatRules": [
                            {
                            "id": "[concat(variables('loadBalancerID'),'/inboundNatRules/RDP')]"
                            },
                            {
                            "id": "[concat(variables('loadBalancerID'),'/inboundNatRules/WinRM')]"
                            }
                        ]
                    }
                  }
                ]
              }
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net')]"
            }
          }
        }
    }
  ],
   "outputs": {
		"fqdn": {
			"value": "[reference(variables('publicIPAddress'),providers('Microsoft.Network','publicIPAddresses').apiVersions[0]).dnsSettings.fqdn]",
			"type": "string"
		}
	}
}